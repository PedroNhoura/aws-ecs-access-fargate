# Esse Script acessa o container pelo AWS Exec, ele usa o comando aws ecs execute-command para executar o comando no container.
# Dentro da Task ele ir√° ler o primeiro container dispon√≠vel e acess√°-lo.


#!/bin/bash

# Configura√ß√µes iniciais
AWS_REGION="us-east-1"

# Fun√ß√£o para capturar entrada e validar
get_input() {
    local prompt="$1"
    local input=""
    while [ -z "$input" ]; do
        read -e -p "$prompt" input
        if [ -z "$input" ]; then
            echo "‚ö†Ô∏è Entrada inv√°lida. Por favor, tente novamente."
        fi
    done
    echo "$input"
}

# Solicita ao usu√°rio os nomes do Cluster e do Servi√ßo
echo "‚ÑπÔ∏è Por favor, insira os nomes do Cluster e do Servi√ßo que deseja usar."
ECS_CLUSTER=$(get_input "Digite o nome do Cluster ECS: ")
echo "‚úîÔ∏è Nome do Cluster armazenado: $ECS_CLUSTER"
echo ""

SERVICE=$(get_input "Digite o nome do Servi√ßo ECS: ")
echo "‚úîÔ∏è Nome do Servi√ßo armazenado: $SERVICE"
echo ""

# Configura a regi√£o da AWS
echo "üåé Configurando a regi√£o da AWS para $AWS_REGION..."
aws configure set region $AWS_REGION
if [ $? -eq 0 ]; then
    echo "‚úÖ Regi√£o da AWS configurada com sucesso."
else
    echo "‚ùå Falha ao configurar a regi√£o da AWS. Verifique se o AWS CLI est√° instalado e configurado corretamente."
    exit 1
fi

# Verifica se o Cluster existe
echo "üîç Verificando se o Cluster '$ECS_CLUSTER' existe..."
CLUSTER_EXISTS=$(aws ecs describe-clusters --clusters "$ECS_CLUSTER" --region $AWS_REGION --query "clusters[?clusterName=='$ECS_CLUSTER'] | length(@)" --output text)
if [ "$CLUSTER_EXISTS" -eq 0 ]; then
    echo "‚ùå O Cluster '$ECS_CLUSTER' n√£o existe ou n√£o est√° ativo. Verifique o nome e tente novamente."
    exit 1
fi
echo "‚úÖ Cluster '$ECS_CLUSTER' verificado com sucesso."

# Verifica se o Servi√ßo existe no Cluster
echo "üîç Verificando se o Servi√ßo '$SERVICE' existe no Cluster '$ECS_CLUSTER'..."
SERVICE_EXISTS=$(aws ecs describe-services --cluster "$ECS_CLUSTER" --services "$SERVICE" --region $AWS_REGION --query "services[?serviceName=='$SERVICE'] | length(@)" --output text)
if [ "$SERVICE_EXISTS" -eq 0 ]; then
    echo "‚ùå O Servi√ßo '$SERVICE' n√£o existe no Cluster '$ECS_CLUSTER'. Verifique o nome e tente novamente."
    exit 1
fi
echo "‚úÖ Servi√ßo '$SERVICE' verificado com sucesso."

# Obt√©m o ID da primeira task RUNNING associada ao servi√ßo
echo "üîç Obtendo o ID da primeira task RUNNING no servi√ßo $SERVICE..."
TASK_ID=$(aws ecs list-tasks --cluster $ECS_CLUSTER --service-name $SERVICE --region $AWS_REGION --query "taskArns[0]" --output text)

# Verifica se foi poss√≠vel obter o ID da task
if [ -z "$TASK_ID" ] || [ "$TASK_ID" == "None" ]; then
    echo "‚ùå Nenhuma task encontrada no servi√ßo $SERVICE. Verifique se o servi√ßo est√° em execu√ß√£o."
    exit 1
fi

echo "‚úÖ ID da Task obtido automaticamente: $TASK_ID"

# Obt√©m os detalhes da task
echo "üîç Obtendo informa√ß√µes da task $TASK_ID..."
TASK_DETAILS=$(aws ecs describe-tasks --cluster $ECS_CLUSTER --tasks $TASK_ID --region $AWS_REGION --query "tasks[0]" --output json)
if [ $? -ne 0 ]; then
    echo "‚ùå Falha ao obter informa√ß√µes da task. Verifique o ID da task e tente novamente."
    exit 1
fi

# Lista containers na task
echo "üìù Containers na Task $TASK_ID:"
CONTAINERS=$(echo "$TASK_DETAILS" | jq -r '.containers[] | {Name: .name, Status: .lastStatus, RuntimeId: .runtimeId, ExitCode: .exitCode}')
if [ -z "$CONTAINERS" ]; then
    echo "‚ùå Nenhum container encontrado na task. Verifique se a task est√° em execu√ß√£o."
    exit 1
fi

# Exibe informa√ß√µes de cada container
echo "$CONTAINERS" | jq -r '"\nüì¶ Container Name: \(.Name)\n   Status: \(.Status)\n   Runtime ID: \(.RuntimeId)\n   Exit Code: \(.ExitCode // "N/A")\n"'

# Obt√©m o nome do primeiro container listado
FIRST_CONTAINER=$(echo "$TASK_DETAILS" | jq -r '.containers[0].name')
if [ -z "$FIRST_CONTAINER" ]; then
    echo "‚ùå Falha ao identificar o primeiro container. Verifique a task."
    exit 1
fi

# Conecta ao container usando /bin/sh
echo "üîó Conectando ao container $FIRST_CONTAINER usando /bin/sh..."
aws ecs execute-command \
    --cluster $ECS_CLUSTER \
    --task $TASK_ID \
    --container $FIRST_CONTAINER \
    --region $AWS_REGION \
    --command "/bin/sh" \
    --interactive

if [ $? -eq 0 ]; then
    echo "‚úÖ Conex√£o finalizada com sucesso com o container $FIRST_CONTAINER."
else
    echo "‚ùå Falha ao conectar ao container $FIRST_CONTAINER. Verifique os logs para mais detalhes."
    exit 1
fi
